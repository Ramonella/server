/* Generated By:JJTree&JavaCC: Do not edit this line. Analizador_BDConstants.java */
package XML.BD;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Analizador_BDConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int proc = 6;
  /** RegularExpression Id. */
  int object = 7;
  /** RegularExpression Id. */
  int tabla = 8;
  /** RegularExpression Id. */
  int abre_etiqueta = 9;
  /** RegularExpression Id. */
  int cierra_etiqueta = 10;
  /** RegularExpression Id. */
  int nombre = 11;
  /** RegularExpression Id. */
  int func = 12;
  /** RegularExpression Id. */
  int diagonal = 13;
  /** RegularExpression Id. */
  int params = 14;
  /** RegularExpression Id. */
  int tip = 15;
  /** RegularExpression Id. */
  int rows = 16;
  /** RegularExpression Id. */
  int row = 17;
  /** RegularExpression Id. */
  int path = 18;
  /** RegularExpression Id. */
  int comple = 19;
  /** RegularExpression Id. */
  int TEXT = 20;
  /** RegularExpression Id. */
  int INTEGER = 21;
  /** RegularExpression Id. */
  int DOUBLE = 22;
  /** RegularExpression Id. */
  int BOOL = 23;
  /** RegularExpression Id. */
  int DATE = 24;
  /** RegularExpression Id. */
  int DATETIME = 25;
  /** RegularExpression Id. */
  int S_MENOS = 26;
  /** RegularExpression Id. */
  int dos_puntos = 27;
  /** RegularExpression Id. */
  int nulo = 28;
  /** RegularExpression Id. */
  int no_nulo = 29;
  /** RegularExpression Id. */
  int autoincrementable = 30;
  /** RegularExpression Id. */
  int llave_prim = 31;
  /** RegularExpression Id. */
  int llave_for = 32;
  /** RegularExpression Id. */
  int unico = 33;
  /** RegularExpression Id. */
  int DECIMAL = 34;
  /** RegularExpression Id. */
  int NUM = 35;
  /** RegularExpression Id. */
  int CADENA = 36;
  /** RegularExpression Id. */
  int CARACTER = 37;
  /** RegularExpression Id. */
  int id = 38;
  /** RegularExpression Id. */
  int LETRA = 39;
  /** RegularExpression Id. */
  int DIGITO = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\r\\n\"",
    "\"\\n\"",
    "\"procedure\"",
    "\"object\"",
    "\"Tabla\"",
    "\"<\"",
    "\">\"",
    "\"nombre\"",
    "\"func\"",
    "\"/\"",
    "\"params\"",
    "\"tipo\"",
    "\"rows\"",
    "\"row\"",
    "\"path\"",
    "\"comple\"",
    "\"TEXT\"",
    "\"INTEGER\"",
    "\"DOUBLE\"",
    "\"BOOL\"",
    "\"DATE\"",
    "\"DATETIME\"",
    "\"-\"",
    "\":\"",
    "\"Nulo\"",
    "\"No Nulo\"",
    "\"Autoincrementable\"",
    "\"Llave_Primaria\"",
    "\"Llave_Foranea\"",
    "\"Unico\"",
    "<DECIMAL>",
    "<NUM>",
    "<CADENA>",
    "<CARACTER>",
    "<id>",
    "<LETRA>",
    "<DIGITO>",
  };

}
