
options{
	
IGNORE_CASE = false;

STATIC=false;
}

PARSER_BEGIN(Analizador_Object)

package XML.Object;
import java.io.*;

public class Analizador_Object{

}

PARSER_END(Analizador_Object)
SKIP:
{
 " "
    |"\r"
    |"\t"
    |"\r\n"
    |"\n"
}


TOKEN:{

< obj:"obj">
|< abre_etiqueta:"<">
|< cierra_etiqueta:">">
|< nombre:"nombre">
|< attr:"attr">
|< diagonal:"/">

}

TOKEN:{
   < TEXT:"TEXT">
  | < INTEGER:"INTEGER">
  | < DOUBLE:"DOUBLE">
  | < BOOL:"BOOL">
  | < DATE:"DATE">
  | <DATETIME:"DATETIME">

}



TOKEN :   //EXPRESONES REGULARES 
{
     <DECIMAL: (["0"-"9"])+("."(["0"-"9"])+)>
  |  < NUM: ["0"-"9"] (["0"-"9"])* >
  |  <CADENA: "\"" (  ~["\""] )* "\"">
  |  <CARACTER: "\'" (["0"-"9"] | ["_","a"-"z","A"-"Z"] | "#" | "$" | "%" | "?" | "Â¿" | "@")  "\'">
  |  < id: <LETRA> (<LETRA>|<DIGITO>)* >
  |  < #LETRA: ["_","a"-"z","A"-"Z"] >
  |  < #DIGITO: ["0"-"9"] >
}


SimpleNode Start():{}{

	Inicio(){return jjtThis;}

}


void Inicio():{}{

	sentencias()
}


void TIPO()#Tipo:{Token t;}
{
   
   t= <TEXT> { jjtThis.setName(t.image); }
  |t=<INTEGER> { jjtThis.setName(t.image); }
  |t=<DOUBLE> {  jjtThis.setName(t.image); }
  |t=<BOOL> { jjtThis.setName(t.image); }
  |t=<DATETIME> {  jjtThis.setName(t.image); }
  |t=<DATE> { jjtThis.setName(t.image); }
}


void NombreV():{}{

	<abre_etiqueta> <nombre> <cierra_etiqueta> term_id() <abre_etiqueta><diagonal><nombre><cierra_etiqueta>
}

 void Atributo():{}{

   <abre_etiqueta> TIPO() <cierra_etiqueta> term_id() <abre_etiqueta> <diagonal> TIPO()<cierra_etiqueta>

 }

 void Objeto():{}{

 	<abre_etiqueta> <obj> <cierra_etiqueta>NombreV()<abre_etiqueta><attr><cierra_etiqueta>(LOOKAHEAD(2)Atributo())*<abre_etiqueta><diagonal><attr><cierra_etiqueta><abre_etiqueta><diagonal><obj> <cierra_etiqueta> 

 }

void sentencias():{}{

 (Objeto())*

}


void term_id()  :{Token t;}
{
  t = <id> { jjtThis.setName(t.image); }
}
